psql -U postgres -h 207.182.151.252 -p 5432

l:nixer
p:bArb0$ing
DB:korziny

psql -U nixer korziny -h 207.182.151.252 -p 5432

CREATE DATABASE korziny;
CREATE USER nixer WITH PASSWORD 'bArb0$ing';
GRANT ALL PRIVILEGES ON DATABASE korziny to nixer;
psql -U nixer korziny -h 207.182.151.252 -p 5432



Для того, чтобы создать связи между таблицами в PostgreSQL, вы можете использовать концепцию внешних ключей. Внешний ключ - это столбец или группа столбцов в одной таблице, которые указывают на первичный ключ или уникальный столбец в другой таблице. Внешний ключ позволяет связать данные из разных таблиц и обеспечить их целостность и согласованность.

Чтобы создать внешний ключ в PostgreSQL, вы можете использовать следующий синтаксис:

ALTER TABLE дочерняя_таблица
ADD CONSTRAINT имя_ограничения
FOREIGN KEY (столбец_дочерней_таблицы)
REFERENCES главная_таблица (столбец_главной_таблицы)
[ON DELETE {CASCADE|RESTRICT|SET NULL|NO ACTION}]
[ON UPDATE {CASCADE|RESTRICT|SET NULL|NO ACTION}];

Здесь:

•  дочерняя_таблица - это таблица, в которой вы хотите создать внешний ключ.

•  имя_ограничения - это имя, которое вы хотите дать внешнему ключу. Вы можете опустить его, и PostgreSQL сгенерирует его автоматически.

•  столбец_дочерней_таблицы - это столбец в дочерней таблице, который будет ссылаться на столбец в главной таблице.

•  главная_таблица - это таблица, на которую вы хотите ссылаться с помощью внешнего ключа.

•  столбец_главной_таблицы - это столбец в главной таблице, который является первичным ключом или уникальным столбцом.

•  ON DELETE и ON UPDATE - это опции, которые определяют, что произойдет с данными в дочерней таблице, если данные в главной таблице будут удалены или изменены. Вы можете выбрать одно из следующих действий:

•  CASCADE - это означает, что если данные в главной таблице будут удалены или изменены, то данные в дочерней таблице будут удалены или изменены соответственно.

•  RESTRICT - это означает, что если данные в главной таблице будут удалены или изменены, то операция будет отменена, и вы получите ошибку.

•  SET NULL - это означает, что если данные в главной таблице будут удалены или изменены, то данные в дочерней таблице будут установлены в NULL.

•  NO ACTION - это означает, что если данные в главной таблице будут удалены или изменены, то ничего не произойдет с данными в дочерней таблице. Это действие по умолчанию, если вы не укажете другое.

Например, предположим, что у вас есть две таблицы: customers и orders. Таблица customers содержит информацию о клиентах, а таблица orders содержит информацию о заказах. Вы хотите связать эти таблицы так, чтобы каждый заказ имел ссылку на клиента, который его сделал. Вы также хотите, чтобы при удалении или изменении данных о клиенте в таблице customers, данные о заказах в таблице orders также удалялись или изменялись. Для этого вы можете использовать следующий код:

ALTER TABLE orders
ADD CONSTRAINT orders_customer_id_fkey
FOREIGN KEY (customer_id)
REFERENCES customers (id)
ON DELETE CASCADE
ON UPDATE CASCADE;

Здесь:

•  orders - это дочерняя таблица, в которой вы хотите создать внешний ключ.

•  orders_customer_id_fkey - это имя, которое вы дали внешнему ключу.

•  customer_id - это столбец в таблице orders, который будет ссылаться на столбец id в таблице customers.

•  customers - это главная таблица, на которую вы хотите ссылаться с помощью внешнего ключа.

•  id - это столбец в таблице customers, который является первичным ключом.

•  ON DELETE CASCADE и ON UPDATE CASCADE - это опции, которые означают, что если данные в таблице customers будут удалены или изменены, то данные в таблице orders будут удалены или изменены соответственно.
